plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.java'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral() //repo where you can download the third party libiries
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Hibernate Validator for validation annotations
	implementation 'org.hibernate.validator:hibernate-validator'

	implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	implementation 'org.apache.commons:commons-lang3:3.12.0'

	implementation 'org.springframework.boot:spring-boot-starter-mail'


}

tasks.named('test') {
	useJUnitPlatform() //each line of code is tested properly is called unittesting
}